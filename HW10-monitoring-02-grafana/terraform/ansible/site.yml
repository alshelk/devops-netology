---
- name: Install prometheus manual
  hosts: prometheus
  handlers:
    - name: restarted prometheus service
      become: true
      ansible.builtin.service:
        name: prometheus
        state: restarted
      when: not ansible_check_mode
  tasks:
    - block:
      - name: Get prometheus distrib
        ansible.builtin.get_url:
          url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}-rc.0/prometheus-{{ prometheus_version }}-rc.0.linux-amd64.tar.gz"
          dest: "{{ home_dir }}/prometheus-{{ prometheus_version }}.tar.gz"
      - name: Create unarhive directory
        ansible.builtin.file:
          path: "{{ home_dir }}/prometheus-{{ prometheus_version }}"
          state: directory
      - name: Extract prometheus
        ansible.builtin.unarchive:
          src: "{{ home_dir }}/prometheus-{{ prometheus_version }}.tar.gz"
          dest: "{{ home_dir }}/prometheus-{{ prometheus_version }}/"
          extra_opts: [--strip-components=1]
          remote_src: yes
        when: not ansible_check_mode
    - block:
      - name: add prometheus group
        ansible.builtin.group:
          name: prometheus
          state: present
      - name: Add the user 'prometheus' with a group of 'prometheus'
        ansible.builtin.user:
          name: prometheus
          comment: prometheus
          shell: /sbin/nologin
          group: prometheus
      - name: Create data directory for Prometheus
        ansible.builtin.file:
          path: "/var/lib/prometheus"
          state: directory
          owner: prometheus
          group: prometheus
          mode: '0755'
      - name: Create configuration directory for Prometheus
        ansible.builtin.file:
          path: "{{ prometheus_config_dir }}"
          state: directory
          owner: prometheus
          group: prometheus
          mode: '0755'
      - name: Copy the prometheus files 
        ansible.builtin.copy:
          src: "{{ item.src }}"
          dest: "{{ item.dest }}"
          owner: prometheus
          group: prometheus
          mode: '0755'
          remote_src: true
        loop:
          - { src: "{{ home_dir }}/prometheus-{{ prometheus_version }}/prometheus", dest: "/usr/local/bin/"}
          - { src: "{{ home_dir }}/prometheus-{{ prometheus_version }}/promtool", dest: "/usr/local/bin/"}
          - { src: "{{ home_dir }}/prometheus-{{ prometheus_version }}/consoles/", dest: "{{ prometheus_config_dir }}"}
          - { src: "{{ home_dir }}/prometheus-{{ prometheus_version }}/console_libraries/", dest: "{{ prometheus_config_dir }}"}
      - name: Configure prometheus from template
        ansible.builtin.template:
          src: prometheus.yml.j2
          dest: "{{ prometheus_config_dir }}/prometheus.yml"
          owner: prometheus
          group: prometheus
          mode: 0755
      - name: Configure prometheus.service from template
        ansible.builtin.template:
          src: prometheus.service.j2
          dest: /etc/systemd/system/prometheus.service
          mode: 0755
      become: true
      notify: restarted prometheus service
    - name: Flush handlers
      meta: flush_handlers

- name: Install grafana
  hosts: grafana
  handlers:
    - name: restarted grafana service
      become: true
      ansible.builtin.service:
        name: grafana-server
        state: restarted
      when: not ansible_check_mode
  tasks:
    - name: Install grafana
      ansible.builtin.yum:
        name: https://dl.grafana.com/oss/release/grafana-10.0.2-1.x86_64.rpm
        state: present
      become: true
    - name: Enable service grafana
      ansible.builtin.systemd:
        name: grafana-server
        enabled: true
        masked: no
      become: true
      notify: restarted grafana service
    - name: Flush handlers
      meta: flush_handlers

- name: Install node_exporter
  hosts: exporter
  handlers:
    - name: restarted node_exporter service
      become: true
      ansible.builtin.service:
        name: node_exporter
        state: restarted
      when: not ansible_check_mode
  tasks:
    - name: Get node_exporter
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "{{ home_dir }}/node_exporter-{{ node_exporter_version }}.tar.gz"
    - name: Create unarhive directory
      ansible.builtin.file:
        path: "{{ home_dir }}/node_exporter-{{ node_exporter_version }}"
        state: directory
    - name: Extract prometheus
      ansible.builtin.unarchive:
        src: "{{ home_dir }}/node_exporter-{{ node_exporter_version }}.tar.gz"
        dest: "{{ home_dir }}/node_exporter-{{ node_exporter_version }}/"
        extra_opts: [--strip-components=1]
        remote_src: yes
      when: not ansible_check_mode
    - name: Create directory for node_exporter
      ansible.builtin.file:
        path: "{{ work_dir }}"
        state: directory
        mode: 0755
      become: true
    - name: Copy the prometheus files
      ansible.builtin.copy:
        src: "{{ home_dir }}/node_exporter-{{ node_exporter_version }}/node_exporter"
        dest: "{{ work_dir }}"
        remote_src: true
        mode: 0755
      become: true
    - name: Copy node_exporter.service
      ansible.builtin.template:
        src: node_exporter.service.j2
        dest: /etc/systemd/system/node_exporter.service
        mode: 0755
      become: true
      notify: restarted node_exporter service
    - name: Flush handlers
      meta: flush_handlers


