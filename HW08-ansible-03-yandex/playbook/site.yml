---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
      when: not ansible_check_mode
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      when: not ansible_check_mode
    - name: Open connection in local network
      become: true
      ansible.builtin.template:
          src: clickhouse.config.j2
          dest: /etc/clickhouse-server/config.xml
          mode: 0400
          owner: clickhouse
          group: clickhouse
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0
      when: not ansible_check_mode
    - name: Create table
      ansible.builtin.command: "clickhouse-client -q 'create table logs.local_log
        (file String, hostname String, message String, timestamp DateTime) Engine=Log;'"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc !=57
      changed_when: create_table.rc == 0
      when: not ansible_check_mode
- name: Install Vector manual
  hosts: vector
  handlers:
    - name: restarted vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
      when: not ansible_check_mode
  tasks:
    - block:
      - name: Get vector distrib
        ansible.builtin.get_url:
          url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-musl.tar.gz"
          dest: "{{ home_dir }}/vector-{{ vector_version }}.tar.gz"
      - name: Create root directory
        ansible.builtin.file:
          path: "{{ home_dir }}/vector-{{ vector_version }}"
          state: directory
      - name: Extract vector
        ansible.builtin.unarchive:
          src: "{{ home_dir }}/vector-{{ vector_version }}.tar.gz"
          dest: "{{ home_dir }}/vector-{{ vector_version }}/"
          extra_opts: [--strip-components=2]
          remote_src: yes
        when: not ansible_check_mode
    - block:
      - name: Copy vector to bin with owner and permissions
        ansible.builtin.copy:
          src: "{{ home_dir }}/vector-{{ vector_version }}/bin/vector"
          dest: /usr/bin/vector
          mode: '0755'
          remote_src: true
        when: not ansible_check_mode
      - name: Configure vector.service from template
        ansible.builtin.template:
          src: vector.service.j2
          dest: /etc/systemd/system/vector.service
          mode: 0644
        tags:
          - vector_service
      - name: create config dir for vector
        ansible.builtin.file:
          path: "{{ vector_config_dir }}"
          state: directory
          mode: 0644
      - name: Configure vector from template
        ansible.builtin.template:
          src: vector.yml.j2
          dest: "{{ vector_config_dir }}/vector.yml"
          mode: 0644
      - name: Create data directory
        ansible.builtin.file:
          path: "{{ vector_config.data_dir }}"
          state: directory
      become: true
      notify: restarted vector service
    - name: Flush handlers
      meta: flush_handlers
- name: Install lighthouse
  hosts: lighthouse
  tags: lighthouse
  handlers:
    - name: restarted nginx service
      become: true
      ansible.builtin.service:
        name: nginx
        state: restarted
      when: not ansible_check_mode
  tasks:
    - block:
      - name: add repo nginx
        ansible.builtin.copy:
          dest: /etc/yum.repos.d/nginx.repo
          mode: '0755'
          content: |
            [nginx]
            name=nginx repo
            baseurl=https://nginx.org/packages/centos/$releasever/$basearch/
            gpgcheck=0
            enabled=1
      - name: install nginx and git
        ansible.builtin.yum:
          name:
            - nginx
            - git
          state: latest
          update_cache: yes
        when: not ansible_check_mode
      - name: Get lighthouse from git
        ansible.builtin.git:
          repo: 'https://github.com/VKCOM/lighthouse.git'
          dest: "{{ lighthouse_home_dir }}"
        when: not ansible_check_mode
      - name: Configure nginx from template
        ansible.builtin.template:
          src: lighthouse.conf.j2
          dest: "{{ nginx_config_dir }}/conf.d/default.conf"
      become: true
      notify: restarted nginx service
    - name: Flush handlers
      meta: flush_handlers
